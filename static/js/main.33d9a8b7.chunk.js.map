{"version":3,"sources":["components/navigation/Sidebar.js","components/navigation/Navbar.js","menu_pages/Dashboard.js","menu_pages/Post.js","menu_pages/Result.js","components/navigation/Contents.js","App.js","reportWebVitals.js","index.js"],"names":["Sider","Layout","Sidebar","props","trigger","collapsible","collapsed","isCollapsed","className","theme","mode","defaultSelectedKeys","Item","icon","UserOutlined","to","VideoCameraOutlined","UploadOutlined","Header","Navbar","propsIsCollapsed","onCallBackToggle","useState","setIsCollapsed","style","padding","onClick","MenuUnfoldOutlined","MenuFoldOutlined","Dashboard","Post","Result","Content","Contents","useEffect","a","margin","minHeight","path","component","exact","App","toggleData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0SAaQA,EAAUC,IAAVD,MA6BOE,EA1BC,SAACC,GAGb,OACI,eAACH,EAAD,CAAOI,QAAS,KAAMC,aAAW,EAACC,UAAWH,EAAMI,YAAnD,UACI,qBAAKC,UAAU,SACf,eAAC,IAAD,CAAMC,MAAM,OAAOC,KAAK,SAASC,oBAAqB,CAAC,KAAvD,UACI,eAAC,IAAKC,KAAN,CAAmBC,KAAM,cAACC,EAAA,EAAD,IAAzB,sBAEI,cAAC,IAAD,CAAMC,GAAG,QAFE,KAKf,eAAC,IAAKH,KAAN,CAAuBC,KAAM,cAACG,EAAA,EAAD,IAA7B,iBAEI,cAAC,IAAD,CAAMD,GAAG,YAFE,SAKf,eAAC,IAAKH,KAAN,CAAyBC,KAAM,cAACI,EAAA,EAAD,IAA/B,mBAEI,cAAC,IAAD,CAAMF,GAAG,cAFE,kB,kBCxBvBG,G,OAAWjB,IAAXiB,QAkBOC,EAfA,SAAC,GAAyD,IAA1CC,EAAyC,EAAtDb,YAA+Bc,EAAuB,EAAvBA,iBAC7C,EAAwCC,mBAASF,GAAjD,mBAAQb,EAAR,KAAqBgB,EAArB,KAMA,OACI,cAACL,EAAD,CAAQV,UAAU,yBAAyBgB,MAAO,CAAEC,QAAS,GAA7D,SACI,sBAAMjB,UAAU,UAAUkB,QANnB,WACXH,GAAgBH,GAChBC,GAAkBD,IAId,SACMb,EAAc,cAACoB,EAAA,EAAD,IAAyB,cAACC,EAAA,EAAD,S,yBCZ1CC,G,OARG,WACd,OACI,8BACI,+CCKGC,EARF,WACT,OACI,8BACI,yCCKGC,EARA,WACX,OACI,8BACI,gD,OCQJC,G,OAAY/B,IAAZ+B,SAgCOC,EA7BE,WAYf,OAXAC,oBAAS,sBAAC,sBAAAC,EAAA,0FAQP,IAID,cAACH,EAAD,CACIxB,UAAU,yBACVgB,MAAO,CACLY,OAAQ,YACRX,QAAS,GACTY,UAAW,QALjB,SAQI,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWV,EAAWW,OAAK,IAC3C,cAAC,IAAD,CAAOF,KAAK,QAAQC,UAAWT,IAC/B,cAAC,IAAD,CAAOQ,KAAK,UAAUC,UAAWR,UCf5BU,EAjBH,WACV,MAAwCnB,qBAAxC,mBAAQf,EAAR,KAAqBgB,EAArB,KAMA,OACE,eAAC,IAAD,WACE,cAAC,EAAD,CAAShB,YAAaA,IACtB,eAAC,IAAD,WACE,cAAC,EAAD,CAAQA,YAAaA,EAAac,iBARjB,SAACqB,GACtBnB,EAAemB,MAQX,cAAC,EAAD,WCROC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.33d9a8b7.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Layout, Menu} from 'antd';\r\nimport {\r\n    UserOutlined,\r\n    VideoCameraOutlined,\r\n    UploadOutlined,\r\n} from '@ant-design/icons'\r\nimport { \r\n    Link\r\n} from 'react-router-dom'\r\n\r\nimport '../../styles/sidebar.css'\r\n\r\nconst { Sider } = Layout\r\n\r\n\r\nconst Sidebar = (props) => {\r\n    \r\n    \r\n    return (\r\n        <Sider trigger={null} collapsible collapsed={props.isCollapsed} >\r\n            <div className=\"logo\" />\r\n            <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['/']} >\r\n                <Menu.Item key=\"/\" icon={<UserOutlined />}>\r\n                    Dashboard\r\n                    <Link to=\"/\" />\r\n                </Menu.Item>\r\n                \r\n                <Menu.Item key=\"/post\" icon={<VideoCameraOutlined />}>\r\n                    Post\r\n                    <Link to=\"/post\" />\r\n                </Menu.Item>\r\n                                \r\n                <Menu.Item key=\"/result\" icon={<UploadOutlined />}>\r\n                    Result\r\n                    <Link to=\"/result\" />\r\n                </Menu.Item>\r\n                \r\n            </Menu>\r\n        </Sider>\r\n    )\r\n}\r\nexport default Sidebar\r\n","import React, { useState } from 'react';\r\nimport { Layout } from 'antd';\r\nimport {\r\n    MenuUnfoldOutlined,\r\n    MenuFoldOutlined\r\n  } from '@ant-design/icons';\r\n\r\nimport '../../styles/navbar.css'\r\n\r\nconst { Header } = Layout\r\n\r\n\r\nconst Navbar = ({ isCollapsed: propsIsCollapsed, onCallBackToggle }) => {\r\n    const [ isCollapsed, setIsCollapsed ] = useState(propsIsCollapsed)\r\n\r\n    const toggle = () => {\r\n        setIsCollapsed(!propsIsCollapsed)\r\n        onCallBackToggle(!propsIsCollapsed)\r\n    }\r\n    return(\r\n        <Header className=\"site-layout-background\" style={{ padding: 0 }}>\r\n            <span className=\"trigger\" onClick={toggle}>\r\n                { isCollapsed ? <MenuUnfoldOutlined /> : <MenuFoldOutlined /> }\r\n            </span>\r\n          </Header>\r\n    )\r\n}\r\nexport default Navbar","import React from 'react'\r\n\r\nconst Dashboard = () => {\r\n    return (\r\n        <div>\r\n            <h2>Dashboard</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","import React from 'react'\r\n\r\nconst Post = () => {\r\n    return (\r\n        <div>\r\n            <h2>Post</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post\r\n","import React from 'react'\r\n\r\nconst Result = () => {\r\n    return (\r\n        <div>\r\n            <h2>Result Page</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Result\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Layout } from 'antd'\r\nimport axios from 'axios'\r\nimport Dashboard from '../../menu_pages/Dashboard'\r\nimport Post from '../../menu_pages/Post'\r\nimport Result from '../../menu_pages/Result'\r\nimport { \r\n  Switch,\r\n  Route\r\n} from 'react-router-dom'\r\n\r\nimport '../../styles/content.css'\r\n\r\nconst { Content } = Layout\r\n\r\n\r\nconst Contents = () => {\r\n  useEffect(async () => {\r\n    // const result = await axios('https://jsonplaceholder.typicode.com').get('/posts')\r\n\r\n    // axios('https://jsonplaceholder.typicode.com')\r\n    //   .get('/posts')\r\n    //   .then(data => console.log(data))\r\n    //   .catch(err => console.warn(err))\r\n\r\n  }, [])\r\n\r\n  \r\n  return (\r\n    <Content\r\n        className=\"site-layout-background\"\r\n        style={{\r\n          margin: '24px 16px',\r\n          padding: 24,\r\n          minHeight: 'auto',\r\n        }}\r\n      >\r\n        <Switch>\r\n          <Route path=\"/\" component={Dashboard} exact />\r\n          <Route path=\"/post\" component={Post} />\r\n          <Route path=\"/result\" component={Result} />\r\n        </Switch>\r\n    </Content>\r\n  )\r\n}\r\nexport default Contents","import React, {useState} from 'react'\r\nimport { Layout } from 'antd';\r\n\r\nimport Sidebar from './components/navigation/Sidebar'\r\nimport Navbar from './components/navigation/Navbar'\r\nimport Content from './components/navigation/Contents'\r\n\r\n\r\nconst App = () => {\r\n  const [ isCollapsed, setIsCollapsed ] = useState()\r\n\r\n  const callBackToggle = (toggleData) => {\r\n    setIsCollapsed(toggleData)\r\n  }\r\n\r\n  return (  \r\n    <Layout>\r\n      <Sidebar isCollapsed={isCollapsed}/>\r\n      <Layout>\r\n        <Navbar isCollapsed={isCollapsed} onCallBackToggle={callBackToggle}/>\r\n        <Content />\r\n      </Layout>\r\n    </Layout>\r\n  )\r\n}\r\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport './index.css';\r\nimport 'antd/dist/antd.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}